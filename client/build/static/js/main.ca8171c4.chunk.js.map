{"version":3,"sources":["utils/web3Modal.js","Header.js","Footer.js","../node_modules/@openzeppelin/contract-loader/lib sync /^.*/.json$","Nav.js","License.js","Home.js","App.js","serviceWorker.js","index.js","assets/dai.png","../node_modules/@openzeppelin/contract-loader/lib sync","Player.js"],"names":["web3Modal","Web3Modal","network","cacheProvider","logoutOfWeb3Modal","a","clearCachedProvider","window","location","reload","sf","dai","daix","dethContract","wad4human","require","SuperfluidSDK","ZERO_ADDRESS","repeat","Header","useState","daiBalance","setDaiBalance","daixBalance","setDaixBalance","userAddress","setUserAddress","provider","setDAIapproved","loadWeb3Modal","useCallback","portis","Portis","Framework","web3","Web3","tokens","initialize","contracts","TestToken","at","fDAI","address","fDAIx","global","eth","getAccounts","accounts","amount","mint","utils","toWei","toString","from","balanceOf","call","approve","upgrade","then","i","allowance","loadContract","Contract","dethABI","abi","methods","speak","productCount2","console","log","useEffect","cachedProvider","className","onClick","daiBal","src","dai_logo","style","width","height","slice","mintDAI","convertDAIx","approveDAI","testContract","href","Footer","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Nav","show","alt","Home","state","videos","fetch","response","json","data","this","setState","map","video","to","crossOrigin","allow","loop","poster","onMouseOver","event","target","play","onMouseOut","load","name","duration","Component","Dashboard","streamingRate","setStreamingRate","deth","getStreamingRate","License","App","path","component","exact","Player","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","Helper","variable1","bob","user","token","alice","vid","flow","recipient","flowRate","receipt","details","agreements","cfa","getFlow","type","label","kind","srcLang","default","paused","createFlow","updateFlow","pause","props","videoId","params","videoData","res"],"mappings":"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","file":"static/js/main.ca8171c4.chunk.js","sourcesContent":["import Web3Modal from \"web3modal\"; //import WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"90db0e566ddf4de7b05ed1e57306bbe4\";\n\n// Web3Modal also supports many other wallets.\n// You can see other options at https://github.com/Web3Modal/web3modal\nexport const web3Modal = new Web3Modal({\n  network: \"goerli\",\n  cacheProvider: true\n  // providerOptions: {\n  //   walletconnect: {\n  //     package: WalletConnectProvider,\n  //     options: {\n  //       infuraId: INFURA_ID\n  //     }\n  //   }\n  // }\n});\n\nexport const logoutOfWeb3Modal = async function() {\n  await web3Modal.clearCachedProvider();\n  window.location.reload();\n};\n","import { Web3Provider } from '@ethersproject/providers';\nimport Web3 from \"web3\";\nimport dethABI from './contracts/deth';\nimport Portis from '@portis/web3';\nimport { web3Modal, logoutOfWeb3Modal } from \"./utils/web3Modal\";\nimport React, { useCallback, useEffect, useState, Component} from \"react\";\nimport './Header.css'\nimport dai_logo from './assets/dai.png'\n\nconst TruffleContract = require(\"@truffle/contract\");\nconst { wad4human } = require(\"@decentral.ee/web3-helpers\");\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\n\nlet contractAddress = \"0x67EfD9E42e2002c46235c447911f0179c9d8b0f8\";\nlet balButton = 0;\nlet sf;\nlet dai;\nlet daix;\nlet dethContract; \nlet newProvider;\nconst ZERO_ADDRESS = \"0x\"+\"0\".repeat(40);\n\nfunction Header() {\n  const [daiBalance, setDaiBalance] = useState(0);\n  const [daixBalance, setDaixBalance] = useState(0);\n  const [userAddress, setUserAddress] = useState(ZERO_ADDRESS);\n  const [provider, setProvider] = useState();\n  const [daiApproved, setDAIapproved] = useState(0);\n\n  \n\n  /* Open wallet selection modal. */\n  const loadWeb3Modal = useCallback(async () => {\n    const portis = new Portis('5efb0b6c-7dd3-4518-9e04-6fd41cfc0e0d', 'maticMumbai');\n    // const newProvider = await web3Modal.connect();\n\n    sf = new SuperfluidSDK.Framework({\n      web3: new Web3(portis.provider),\n      tokens: [\"fDAI\"]\n    });\n    \n    await sf.initialize();\n\n    dai = await sf.contracts.TestToken.at(sf.tokens.fDAI.address);\n    daix = sf.tokens.fDAIx;\n\n    global.web3 = sf.web3;\n\n    const accounts = await sf.web3.eth.getAccounts();\n    setUserAddress(accounts[0]);\n\n    // setProvider(new Web3Provider(portis.provider));\n\n  }, []);\n\n    /* If user has loaded a wallet before, load it automatically. */\n    useEffect(() => {\n      if (web3Modal.cachedProvider) {\n        loadWeb3Modal();\n      }\n    }, [loadWeb3Modal]);\n\n    async function mintDAI(amount = 100) {\n        // mint some dai here!  100 default amount\n        await dai.mint(\n          userAddress,\n          sf.web3.utils.toWei(amount.toString(), \"ether\"),\n          { from: userAddress }\n        );\n        setDaiBalance(wad4human(await dai.balanceOf.call(userAddress)));\n      }\n    \n      async function convertDAIx(amount = 100) {\n        dai.approve(userAddress, (100*1e18).toString());\n        daix.upgrade((100*1e18).toString());\n        setDaixBalance(wad4human(await daix.balanceOf.call(userAddress)));\n      }\n    \n      async function approveDAI() {\n        await dai\n          .approve(\n            daix.address,\n            \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n            { from: userAddress }\n          )\n          .then(async i =>\n            setDAIapproved(\n              wad4human(await dai.allowance.call(userAddress, daix.address))\n            )\n          );\n      }\n    \n      async function daiBal(){\n        setDaiBalance(wad4human(await dai.balanceOf.call(userAddress)));\n        setDaixBalance(wad4human(await daix.balanceOf.call(userAddress)));\n      }\n      function loadContract(){\n        dethContract = dethContract || new sf.web3.eth.Contract(dethABI.abi, contractAddress);\n        return dethContract\n      }\n      async function testContract() {\n        const productCount2 = await loadContract().methods.speak().call();\n        console.log(productCount2);\n      }\n\n  return(\n    <header>\n        \n      <button\n          className= 'balButton'\n          onClick = {() => daiBal(balButton)}\n      >\n          {\n              (balButton%2 == 1) ? (\"Check Balance\") : (\n                  <>\n                      <span><img src={dai_logo} style={{width:20, height:20}}></img>DAI: {daiBalance}</span> &nbsp;&nbsp;&nbsp;\n                      <span><img src={dai_logo} style={{width:20, height:20}}></img>DAIx: {daixBalance}</span>\n                      <br />\n                      <span className= 'balButton__text'>Click for Updated Balance</span>\n                  </>\n              )\n          }\n      </button>\n      <button\n          className = \"nav__avtar\" \n          onClick = {() => ({ provider, userAddress, loadWeb3Modal }) => \n          {\n              if (!provider) {\n                  loadWeb3Modal();\n              } else {\n                  logoutOfWeb3Modal();\n              }\n          }}>\n          {!provider ? (\n          \"Connect Wallet\"\n          ) : (\n          <>\n              <span>\"Disconnect Wallet\"</span>\n              <br />\n              <small>{userAddress.slice(0, 10) + \"...\"}</small>\n          </>\n          )}\n      </button>\n  \n      <br></br><br/>\n      <div className = \"banner__fadeBottom\" >\n      <button className = \"banner__button\" onClick={() => mintDAI()}>\n                 Mint some DAI{\" \"}\n      </button>\n        \n      <button className = \"banner__button\" onClick={() => convertDAIx()}>\n                 Convert to DAIx{\" \"}\n      </button>\n\n      <button className = \"banner__button\" onClick={() => approveDAI()}>\n                 Approve auto transaction DAI{\" \"}\n      </button>\n\n      <button className = \"banner__button\" onClick={() => testContract()}>\n                 Check Matic contract{\" \"}\n      </button>\n\n      <a href='/license'>\n      <button className = \"banner__button\">\n                 License Dashboard{\" \"}\n      </button>\n      </a>\n      </div>\n      {/* <br></br> */}\n      {/* <div className = \"banner__fadeBottom\" ></div> */}\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      &copy; Team Dether, EtherPunk 2021. All rights reserved.\n    </footer>\n  );\n}\n\nexport default Footer;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1311;","import React, { useEffect, useState } from 'react'\nimport \"./Nav.css\"\n\nfunction Nav() {\n\n    const [show, handleShow] = useState(false);\n\n\n    // useEffect(() => {\n    //     window.addEventListener(\"scroll\", () => {\n    //         if(window.scrollY > 100) {\n    //             handleShow(true);\n    //         } else handleShow(false);\n    //     })\n    //     return () =>{\n    //         window.removeEventListener(\"scroll\")    \n    //     }\n    // }, [])\n    \n    return (\n        <div className = {`nav ${ show && \"nav__black\" }`}>\n            \n            <a href=\"/\">\n            <img className = \"nav__logo\"\n                src=\"https://fontmeme.com/permalink/210225/118decd2e18ca516ea15d77e75d1dcc3.png\"\n                alt=\"Deflix Logo\"\n            />\n            </a>\n\n            {/* <a href=\"\">\n                <img className = \"nav__avtar\"\n                    src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\n                    alt=\"Deflix Logo\"\n                />\n            </a> */}\n            \n        </div>\n    )\n}\n\nexport default Nav\n","import React, {  useCallback, useState, useEffect, Component } from 'react';\nimport Header from './Header';\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport Web3 from \"web3\";\nimport { web3Modal} from \"./utils/web3Modal\";\nimport Portis from '@portis/web3';\nimport deth from './contracts/deth';\n\nlet dethContract; \nconst ZERO_ADDRESS = \"0x\"+\"0\".repeat(40);\nlet web3;\n\nfunction Dashboard(){\n  const portis = new Portis('5efb0b6c-7dd3-4518-9e04-6fd41cfc0e0d', 'maticMumbai');\n  const [streamingRate, setStreamingRate] = useState(0);\n\n  const loadWeb3Modal = useCallback(async () => {\n    // const newProvider = await web3Modal.connect();\n    // newProvider.on(\"accountsChanged\", accounts => {\n    //   console.log(\"accountsChanged\", accounts);\n    //   setUserAddress(accounts[0]);\n    //   // checkWinner();\n    // });\n\n    web3 = new Web3(portis.provider);\n  }, []);\n  // \n      /* If user has loaded a wallet before, load it automatically. */\n    useEffect(() => {\n        if (web3Modal.cachedProvider) {\n          loadWeb3Modal();\n        }\n        // here you do all the data retrieval: please pull all the current players in the lottery and push them using addPlayer({address, netFlow})\n      }, [loadWeb3Modal]);\n\n  function loadContract(){\n    dethContract = dethContract || new web3.eth.Contract(deth.abi, deth.address);\n    return dethContract\n  }\n\n  async function testContract() {\n    const productCount2 = await loadContract().methods.getStreamingRate().call();\n    console.log('yolo__ss');\n    console.log(productCount2);\n    // check = productCount2;\n    setStreamingRate(productCount2);\n  }\n  // testContract();\n  return(\n    <p>\n    Current straming rate: {streamingRate} \n    <button onClick={() => testContract()}>\n          Refresh\n  </button>\n  </p>\n  );\n}\n\nexport default class License extends Component {\n  render(){\n    return (\n      <div>\n      <Header />\n      <Nav />\n      <Dashboard />\n      <Footer />\n      </div>\n    );\n  }\n}","import React, { Component, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Nav from './Nav';\nimport './Home.css';\nimport YouTube from 'react-youtube'\nimport movieTrailer from 'movie-trailer'\n\nconst opts = {\n  height: \"390\",\n  width: \"100%\",\n  playerVars: {\n      autoplay: 1,\n  }\n}\n\nexport default class Home extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      videos: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch('https://dether.herokuapp.com/videos');\n      const data = await response.json();\n      this.setState({ videos: [...data] });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <Header />\n        <Nav />\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <span className=\"second\">New Movies</span>\n            <div className = \"row__posters\">\n              {this.state.videos.map(video =>\n                <div className=\"col-md-4\" key={video.id}>\n                <Link to={`/player/${video.id}`}>\n                  <div className=\"card border-0\">\n                    <video\n                      crossOrigin = 'anonymous'\n                      allow=\"autoplay\"\n                      loop\n                      poster={`https://dether.herokuapp.com/video/${video.id}/poster`}\n                      // muted=\"muted\"\n                      onMouseOver={event => event.target.play()}\n                      onMouseOut={event => event.target.load()}\n                      src={`https://dether.herokuapp.com/trailer/${video.id}`}  >\n                    </video>\n                    <div className=\"card-body\">\n                      <p>{video.name}</p>\n                      <p>{video.duration}</p>\n                    </div>\n                  </div>\n                </Link>\n              </div>\n              )}\n            </div>\n\n          <div className=\"row\">\n            <span className=\"second\">New Songs</span>\n            <div className = \"row__posters\">\n              {this.state.videos.map(video =>\n                <div className=\"songs\" key={video.id}>\n                <Link to={`/player/${video.id}`}>\n                  <div className=\"card border-0\">\n                    <img \n                      src={`https://cdn.wallpapersafari.com/99/34/Tg0CIa.jpg`} \n                      alt={video.name} \n                      // onMouseOver = {() => onMouseOver(video)}\n                      className = {\"row__poster\"}\n                    />\n                    <div className=\"card-body\">\n                      <p>{video.name}</p>\n                      <p>{video.duration}</p>\n                    </div>\n                  </div>\n                </Link>\n                {/* {trailerUrl && <YouTube videoId = {trailerUrl} opts = {opts}/> } */}\n              </div>\n              )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <span className=\"second\">Gameplay</span>\n            <div className = \"row__posters\">\n              {this.state.videos.map(video =>\n                <div className=\"col-md-4\" key={video.id}>\n                <Link to={`/player/${video.id}`}>\n                  <div className=\"card border-0\">\n                    <img \n                      src={`https://cdn.wallpapersafari.com/99/34/Tg0CIa.jpg`} \n                      alt={video.name} \n                      // onMouseOver = {() => onMouseOver(video)}\n                      className = {\"row__posterLarge\"}\n                    />\n                    <div className=\"card-body\">\n                      <p>{video.name}</p>\n                      <p>{video.duration}</p>\n                    </div>\n                  </div>\n                </Link>\n                {/* {trailerUrl && <YouTube videoId = {trailerUrl} opts = {opts}/> } */}\n              </div>\n              )}\n            </div>\n            </div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Route,BrowserRouter as Router,Switch } from \"react-router-dom\";\nimport Home from './Home';\nimport Player from './Player';\nimport License from './License';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/license\" component={License}></Route>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route path=\"/player/:id\" component={Player}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default __webpack_public_path__ + \"static/media/dai.196bd5b1.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 470;","import Header from './Header';\nimport Footer from './Footer';\nimport { Web3Provider } from '@ethersproject/providers';\nimport Web3 from \"web3\";\nimport dethABI from './contracts/deth';\nimport Portis from '@portis/web3';\nimport { web3Modal, logoutOfWeb3Modal } from \"./utils/web3Modal\";\nimport React, { useCallback, useEffect, useState, Component} from \"react\";\nimport Nav from './Nav';\n\nconst TruffleContract = require(\"@truffle/contract\");\nconst { wad4human } = require(\"@decentral.ee/web3-helpers\");\nconst SuperfluidSDK = require(\"@superfluid-finance/js-sdk\");\n\nlet contractAddress = \"0x67EfD9E42e2002c46235c447911f0179c9d8b0f8\";\nlet sf;\nlet dai;\nlet daix;\nlet dethContract; \nlet newProvider;\nconst ZERO_ADDRESS = \"0x\"+\"0\".repeat(40);\n\nfunction Helper({ variable1 }) {\n  \n  const [userAddress, setUserAddress] = useState(ZERO_ADDRESS);\n  const [provider, setProvider] = useState();\n\n   /* Open wallet selection modal. */\n  const loadWeb3Modal = useCallback(async () => {\n    // const newProvider = await web3Modal.connect();\n    const portis = new Portis('5efb0b6c-7dd3-4518-9e04-6fd41cfc0e0d', 'maticMumbai');\n\n    sf = new SuperfluidSDK.Framework({\n      web3: new Web3(portis.provider),\n      tokens: [\"fDAI\"]\n    });\n    await sf.initialize();\n\n    dai = await sf.contracts.TestToken.at(sf.tokens.fDAI.address);\n    daix = sf.tokens.fDAIx;\n\n    global.web3 = sf.web3;\n\n    const accounts = await sf.web3.eth.getAccounts();\n    setUserAddress(accounts[0]);\n\n    // setProvider(new Web3Provider(portis.provider));\n\n  }, []);\n\n  /* If user has loaded a wallet before, load it automatically. */\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n    // here you do all the data retrieval: please pull all the current players in the lottery and push them using addPlayer({address, netFlow})\n  }, [loadWeb3Modal]);\n\n\n  async function createFlow() {\n\n    const bob = sf.user({ address: userAddress, token: sf.tokens.fDAIx.address });\n    const alice = sf.user({ address: \"0x5d29D15F5993B6563Bef1D13C5A45c636323AE2e\", token: sf.tokens.fDAIx.address });\n    \n    var vid = document.getElementById('player_movie');\n    try{\n      bob.flow({\n          recipient: alice,\n          flowRate: \"3858024691358\", // 10 / mo\n        }).then( receipt => {\n            console.log(\"transaction completed, receipt: \", receipt);\n            //this triggers when the transaction is completed, so you can play video here\n            vid.play();\n        });\n    } catch (e) {\n      console.log(\"there was an error: \", e);\n    }\n\n    console.log(await bob.details());\n\n    // await sf.agreements.cfa.getFlow.call({superToken: sf.tokens.fDAIx.address, sender: bob, receiver: alice})).toString()\n    console.log(await sf.agreements.cfa.getFlow(\n      sf.tokens.fDAIx.address,\n      userAddress,\n      \"0x5d29D15F5993B6563Bef1D13C5A45c636323AE2e\"\n    ));\n  }\n\n  async function updateFlow() {\n\n    const bob = sf.user({ address: userAddress, token: sf.tokens.fDAIx.address });\n    const alice = sf.user({ address: \"0x5d29D15F5993B6563Bef1D13C5A45c636323AE2e\", token: sf.tokens.fDAIx.address });\n\n    bob.flow({\n      recipient: alice,\n      flowRate: \"0\", // 0 / mo\n    });\n  }\n\n  const playPause = () => {\n    var vid = document.getElementById('player_movie');\n    if (vid.paused) {\n      createFlow();\n    }\n    else {\n      updateFlow();\n      vid.pause();\n    }\n  };\n\n\n  return(\n      <div>\n          <center>\n          <p>Video Player</p>\n          <hr></hr>\n          <video id=\"player_movie\">\n            <source src={`https://dether.herokuapp.com/video/${variable1}`} type=\"video/mp4\"></source>\n            <track label=\"English\" kind=\"captions\" srcLang=\"en\" src={`https://dether.herokuapp.com/video/${variable1}/caption`} default></track>\n          </video>\n          <br></br>\n          <hr></hr>\n          <button className=\"banner__button\" onClick={playPause}>PLAY / PAUSE</button>\n          </center>\n      </div>\n  );\n}\n\nexport default class Player extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoId: this.props.match.params.id,\n      videoData: {}\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(`https://dether.herokuapp.com/video/${this.state.videoId}/data`);\n      const data = await res.json();\n      this.setState({ videoData: data });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <Header />\n        <Nav />\n        <Helper \n          variable1={this.state.videoId}\n        />\n        <h1>{ this.state.videoData.name }</h1>\n        <Footer />\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}